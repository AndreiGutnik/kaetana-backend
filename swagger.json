{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.1",
    "title": "Kaetana Backend",
    "description": "Kaetana cosmetics store"
  },
  "servers": [{ "url": "https://kaetana.onrender.com" }, { "url": "http://localhost:5000" }],

  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User's endpoints"
    },
    {
      "name": "Category",
      "description": "Categorie's endpoints"
    },
    {
      "name": "Products",
      "description": "Product's endpoints"
    },
    {
      "name": "Today",
      "description": "Calculation of the amount of water consumed as a percentage"
    },
    {
      "name": "Month",
      "description": "Obtaining information on the amount of water consumed for the selected month"
    }
  ],

  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",

        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation. User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error in request"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email or password is use"
                }
              }
            }
          }
        }
      }
    },

    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authorization",

        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation. User is logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error in request"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email or password is wrong"
                }
              }
            }
          }
        }
      }
    },

    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "User signed out",
            "content": {
              "application/json": {
                "example": {
                  "message": "Logout success"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },

    "/api/user/users": {
      "get": {
        "tags": ["User"],
        "summary": "Getting all users",

        "parameters": [],

        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation all users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GettingAllUsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },

    "/api/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "User information",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation user current",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },

    "/api/user/{id}/favorites": {
      "patch": {
        "tags": ["User"],
        "summary": "Add or delete favorite products",

        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Product add to favorites successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditFavoriteProductsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "File not found"
                }
              }
            }
          }
        }
      }
    },

    "/api/user": {
      "patch": {
        "tags": ["User"],
        "summary": "Updating user information",

        "parameters": [],

        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Update object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Update successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error in request"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },

    "/api/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Getting all products",

        "parameters": [],
        "security": [],

        "responses": {
          "200": {
            "description": "Successful operation all products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GettingAllProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Adding a record of product",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Object to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProducRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Add successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProducResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error in request"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },

    "/api/products/{id}": {
      "put": {
        "tags": ["Products"],
        "summary": "Editing of the account of consumed water",

        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id to waternotes",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Object for editing",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditWaterRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Update successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error in request"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Deleting a record of consumed water",

        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id to waternotes",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Delete successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Delete successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error in request"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        }
      }
    },

    "/api/waternotes/today": {
      "get": {
        "tags": ["Today"],
        "summary": "Get a list of all the user's water consumption records for the current day",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad request"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },

    "/api/waternotes/month": {
      "get": {
        "tags": ["Month"],
        "summary": "Get information on the amount of water consumed for the selected month",

        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "example": "01-2023"
            },
            "required": true
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid time value"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "firstname": {
            "type": "string",
            "description": "User's name",
            "example": "Ivan"
          },
          "lastname": {
            "type": "string",
            "description": "User's last name",
            "example": "Petrovych"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380951111111"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123456"
          }
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "firstname": {
                "type": "string",
                "description": "User's name",
                "example": "Ivan"
              },
              "lastname": {
                "type": "string",
                "description": "User's last name",
                "example": "Petrovych"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123456"
          }
        }
      },

      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "User's id",
                "example": "6646566682eecf42a233a089"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "verify": {
                "type": "boolean",
                "description": "User is verify",
                "example": "true"
              }
            }
          },
          "accessToken": {
            "type": "string",
            "description": "User's token",
            "example": "jwt accessToken"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's token",
            "example": "jwt refreshToken"
          }
        }
      },

      "GetCurrentUserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "6589653003eb8cee657a2155"
          },
          "firstname": {
            "type": "string",
            "description": "User's name",
            "example": "Ivan"
          },
          "lastname": {
            "type": "string",
            "description": "User's last name",
            "example": "Petrovych"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380951111111"
          }
        }
      },

      "AvatarUploadResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "Avatar's name",
            "example": "http://res.cloudinary.com/de2jtjawf/image/upload/v1703364742/WaterTracker/avatars/zmsmi0zgrjwcxrlgxyzz.jpg"
          }
        }
      },

      "UpdateRequest": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "description": "User's name",
            "example": "Ivan"
          },
          "lastname": {
            "type": "string",
            "description": "User's last name",
            "example": "Petrovych"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380951111111"
          }
        }
      },

      "UpdateResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "6589653003eb8cee657a2155"
          },
          "firstname": {
            "type": "string",
            "description": "User's name",
            "example": "Ivan"
          },
          "lastname": {
            "type": "string",
            "description": "User's last name",
            "example": "Petrovych"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380951111111"
          },
          "createdAt": {
            "type": "string",
            "description": "User's date created",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "User's date updated",
            "format": "date-time"
          }
        }
      },

      "EditFavoriteProductsResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "6589653003eb8cee657a2155"
          },
          "firstname": {
            "type": "string",
            "description": "User's name",
            "example": "Ivan"
          },
          "lastname": {
            "type": "string",
            "description": "User's last name",
            "example": "Petrovych"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380951111111"
          },
          "favorites": {
            "type": "array",
            "description": "Product's id",
            "example": ["6637fadbe38251a0dd058bb9"]
          },
          "createdAt": {
            "type": "string",
            "description": "User's date created",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "User's date updated",
            "format": "date-time"
          }
        }
      },

      "GettingAllUsersResponse": {},

      "GettingAllProductsResponse": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "description": "Arroy of product's object",
            "items": {
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Product's id",
                  "example": "658e004ee30d5287149784d2"
                },
                "title": {
                  "type": "string",
                  "description": "Title of product's",
                  "example": "ДОМ гель очищуючий"
                },
                "price": {
                  "type": "number",
                  "description": "Price of product's",
                  "example": 19.5
                },
                "desc": {
                  "type": "string",
                  "description": "Description of product's",
                  "example": "Трохи гелю видавіть у вологі лодоні, розітріть та нанесість на вологе обличчя легкими круговими рухами, приділивши особливу увагу Т-зоні (чоло, носа, підборіддя). Ретельно змийте теплою водою."
                },
                "images": {
                  "type": "array",
                  "description": "Array of pfth to products",
                  "items": {
                    "type": "string",
                    "description": "Path to product",
                    "example": "http://res.cloudinary.com/dhobomrxe/image/upload/v1714979074/Kaetana/products/dqptgzc0ercpbdoawaie.png"
                  }
                },
                "createdAt": {
                  "type": "string",
                  "description": "User's date created",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "User's date updated",
                  "format": "date-time"
                }
              }
            }
          },
          "total": {
            "type": "integer",
            "description": "Total products",
            "example": 10
          }
        }
      },

      "AddProducRequest": {
        "type": "object",
        "required": ["amountWater"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of product's",
            "example": "ДОМ гель очищуючий"
          },
          "price": {
            "type": "number",
            "description": "Price of product's",
            "example": 19.5
          },
          "desc": {
            "type": "string",
            "description": "Description of product's",
            "example": "Трохи гелю видавіть ..."
          }
        }
      },

      "AddProducResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Product's id",
            "example": "658e004ee30d5287149784d2"
          },
          "title": {
            "type": "string",
            "description": "Title of product's",
            "example": "ДОМ гель очищуючий"
          },
          "price": {
            "type": "number",
            "description": "Price of product's",
            "example": 19.5
          },
          "desc": {
            "type": "string",
            "description": "Description of product's",
            "example": "Трохи гелю видавіть ..."
          },
          "images": {
            "type": "array",
            "description": "Array of pfth to products",
            "items": {
              "type": "string",
              "description": "Path to product",
              "example": "http://res.cloudinary.com/dhobomrxe/image/upload/v1714979074/Kaetana/products/dqptgzc0ercpbdoawaie.png"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "User's date created",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "User's date updated",
            "format": "date-time"
          }
        }
      },

      "EditWaterRequest": {
        "type": "object",
        "required": ["amountWater"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Time of water consumption",
            "format": "date-time"
          },
          "amountWater": {
            "type": "number",
            "description": "Amount of water consumed",
            "example": 250
          }
        }
      },

      "EditWaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Note's id",
            "example": "658e004ee30d5287149784d2"
          },
          "date": {
            "type": "string",
            "description": "Time of water consumption",
            "format": "date-time"
          },
          "amountWater": {
            "type": "number",
            "description": "Amount of water consumed",
            "example": 250
          },
          "owner": {
            "type": "string",
            "description": "User's id",
            "example": "6589653003eb8cee657a2155"
          },
          "createdAt": {
            "type": "string",
            "description": "User's date created",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "User's date updated",
            "format": "date-time"
          }
        }
      },

      "TodayResponse": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "object",
            "properties": {
              "ownerId": {
                "type": "string",
                "description": "ownerId",
                "example": "6589653003eb8cee657a2155"
              }
            }
          },
          "waterNotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "noteId",
                  "example": "6589ac824cf567a1bf12c294"
                },
                "date": {
                  "type": "string",
                  "description": "Current date",
                  "format": "date-time"
                },
                "amountWater": {
                  "type": "number",
                  "description": "Amount of water consumed by the user",
                  "example": 250
                }
              }
            }
          },
          "percentageAmountWater": {
            "type": "number",
            "description": "Percentage amount of water, %",
            "example": 100
          }
        }
      },

      "MonthResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "dayOfMonth": {
              "type": "string",
              "description": "Day of month",
              "example": "05, April"
            },
            "waterRate": {
              "type": "number",
              "description": "User's daily norm of water",
              "example": 2000
            },
            "percent": {
              "type": "number",
              "description": "The percentage of consumed water from the daily norm",
              "example": 100
            },
            "count": {
              "type": "number",
              "description": "Number of uses",
              "example": 5
            }
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
